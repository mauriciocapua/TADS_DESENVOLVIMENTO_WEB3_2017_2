
package server;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AdminWS", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AdminWS {


    /**
     * 
     * @param id
     * @param quantidade
     * @return
     *     returns boolean
     * @throws RecursoNotFound_Exception
     */
    @WebMethod
    @WebResult(name = "comprarecurso", targetNamespace = "")
    @RequestWrapper(localName = "compraRecurso", targetNamespace = "http://server/", className = "server.CompraRecurso")
    @ResponseWrapper(localName = "compraRecursoResponse", targetNamespace = "http://server/", className = "server.CompraRecursoResponse")
    @Action(input = "http://server/AdminWS/compraRecursoRequest", output = "http://server/AdminWS/compraRecursoResponse", fault = {
    })
    public boolean compraRecurso(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "quantidade", targetNamespace = "")
        String quantidade)
    ;

    /**
     * 
     * @param id
     * @param quantidade
     * @param descricao
     * @return
     *     returns server.Recurso
     * @throws RecursoNotInsert_Exception
     */
    @WebMethod
    @WebResult(name = "incluirecurso", targetNamespace = "")
    @RequestWrapper(localName = "incluiRecurso", targetNamespace = "http://server/", className = "server.IncluiRecurso")
    @ResponseWrapper(localName = "incluiRecursoResponse", targetNamespace = "http://server/", className = "server.IncluiRecursoResponse")
    @Action(input = "http://server/AdminWS/incluiRecursoRequest", output = "http://server/AdminWS/incluiRecursoResponse", fault = {
    })
    public Recurso incluiRecurso(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "descricao", targetNamespace = "")
        String descricao,
        @WebParam(name = "quantidade", targetNamespace = "")
        String quantidade)
    ;

    /**
     * 
     * @return
     *     returns java.util.List<server.User>
     */
    @WebMethod
    @WebResult(name = "User", targetNamespace = "")
    @RequestWrapper(localName = "listAll", targetNamespace = "http://server/", className = "server.ListAll")
    @ResponseWrapper(localName = "listAllResponse", targetNamespace = "http://server/", className = "server.ListAllResponse")
    @Action(input = "http://server/AdminWS/listAllRequest", output = "http://server/AdminWS/listAllResponse")
    public List<User> listAll();

    /**
     * 
     * @param id
     * @return
     *     returns server.User
     * @throws UserNotFound_Exception
     */
    @WebMethod
    @WebResult(name = "User", targetNamespace = "")
    @RequestWrapper(localName = "listById", targetNamespace = "http://server/", className = "server.ListById")
    @ResponseWrapper(localName = "listByIdResponse", targetNamespace = "http://server/", className = "server.ListByIdResponse")
    @Action(input = "http://server/AdminWS/listByIdRequest", output = "http://server/AdminWS/listByIdResponse", fault = {
    })
    public User listById(
        @WebParam(name = "id", targetNamespace = "")
        String id)
    ;

}
